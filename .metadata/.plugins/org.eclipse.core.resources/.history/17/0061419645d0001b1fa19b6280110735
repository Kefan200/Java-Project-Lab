import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;
import java.util.Vector;

public class MenuControllerManager {

	public static String errorMessage;
	public MenuControllerManager() {
		// TODO Auto-generated constructor stub
	}
	public static Vector<MenuManager> getAllMenus(){
		MenuManager menumanager=new MenuManager();
		return menumanager.getAll();
	}
//	public static Vector<MenuManager> entermonth(String month) {
//		int parsedMonth;
////		try {
//			parsedMonth=Integer.parseInt(month);
////			if(parsedMonth<=0) {
////				return false;
////			}
////		} catch (NumberFormatException e) {
////			// TODO Auto-generated catch block
//////			e.printStackTrace();
////			errorMessage="Month must be integer!";
////			return false;
////		}
//		Vector<MenuManager>menus=new Vector<>();
//		try {
//			PreparedStatement ps= Connect.getInstance().prepareStatement("SELECT * FROM employee");
//		//	ps=Connect.getInstance().prepareStatement("SELECT * FROM transactionmanagement");
//			ResultSet rs = ps.executeQuery();
//			while(rs.next()) {
//				int id=rs.getInt("employeeid");
//				String role=rs.getString("employeerole");
//				String name=rs.getString("employeename");
//				String username=rs.getString("employeeusername");
//				String status=rs.getString("employeestatus");
//				int salary=rs.getInt("employeesalary");
//				String password=rs.getString(columnLabel)
//	//			Date date = rs.getDate("transactiondate");
//				
//				MenuManager menu=new MenuManager(id,role,name,username,status,salary);
//				menus.add(menu);
//			}
//			return menus;
//		} catch (SQLException e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		}
//		return null;
//	}
//		
	
	
	public static boolean insertMenu(String role, String name, String username, String status, String salary) {
		int parsedSalary;
		if(role.isBlank()) {
			errorMessage="Role must be filled!";
			return false;
		}else if(name.isBlank()) {
			errorMessage="Name must be filled!";
			return false;
		}else if(username.isBlank()) {
			errorMessage="Username must be filled!";
			return false;
		}else if(status.isBlank()) {
			errorMessage="Status must be filled!";
			return false;
		}else if(!"Active".equals(status)&&!"Not Active".equals(status)) {
			errorMessage="Status must be filled with Active or Not Active";
			return false;
		}
//		else if(salary==0) {
//			errorMessage="Salary must be filled!";
//			return false;
//		}
		try {
			parsedSalary=Integer.parseInt(salary);
			if(parsedSalary<=0) {
				return false;
			}
		} catch (NumberFormatException e) {
			// TODO Auto-generated catch block
//			e.printStackTrace();
			errorMessage="Salary must be integer!";
			return false;
		}
		MenuManager menumanager=new MenuManager();
		menumanager.setRole(role);
		menumanager.setName(name);
		menumanager.setUsername(username);
		menumanager.setStatus(status);
		menumanager.setSalary(parsedSalary);
		menumanager.setPassword(username);
		if(!menumanager.insert()) {
			errorMessage="Insert failed!";
			return false;
		}	
		return true;
	}
	public static boolean updateMenu(String id,String role, String name, String username, String status, String salary) {
		int parsedId;
		int parsedSalary;
		try {
			parsedId=Integer.parseInt(id);
		} catch (NumberFormatException e) {
			// TODO Auto-generated catch block
//			e.printStackTrace();
			errorMessage="ID must be integer!";
			return false;
		}
		
		if(role.isBlank()) {
			errorMessage="Role must be filled!";
			return false;
		}else if(name.isBlank()) {
			errorMessage="Name must be filled!";
			return false;
		}else if(username.isBlank()) {
			errorMessage="Username must be filled!";
			return false;
		}else if(status.isBlank()) {
			errorMessage="Status must be filled!";
			return false;
		}
		else if(!"Active".equals(status)&&!"Not Active".equals(status)) {
			errorMessage="Status must be filled with Active or Not Active";
			return false;
		}
//		else if(salary==0) {
//			errorMessage="Salary must be filled!";
//			return false;
//		}
		try {
			parsedSalary=Integer.parseInt(salary);
		} catch (NumberFormatException e) {
			// TODO Auto-generated catch block
//			e.printStackTrace();
			errorMessage="Salary must be integer!";
			return false;
		}
		MenuManager menumanager=new MenuManager();
		menumanager.setId(parsedId);
		menumanager.setRole(role);
		menumanager.setName(username);
		menumanager.setUsername(username);
		menumanager.setStatus(status);
		menumanager.setSalary(parsedSalary);
		menumanager.setPassword(username);
		if(!menumanager.update()) {
			errorMessage="Update failed!";
			return false;
		}
		return true;
	}
	public static boolean deleteMenu(String id,String status) {
		int parsedId;
		try {
			parsedId=Integer.parseInt(id);
		} catch (NumberFormatException e) {
			// TODO Auto-generated catch block
//			e.printStackTrace();
			errorMessage="ID must be integer!";
			return false;
		}
		status.equals("Not Active");
		MenuManager menumanager=new MenuManager();
		menumanager.setId(parsedId);
		menumanager.setStatus(status);
		if(!menumanager.delete()) {
			errorMessage="Delete failed!";
			return false;
		}
		return true;
	}
	public static Manager showManager() {
		return new Manager();
	}
	public static HomePage showHomeFrame() {
		return new HomePage();
	}
}
